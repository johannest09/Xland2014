@model Xland.Models.PhotoGallery

@{
    ViewBag.Title = "Create";
}
<style>
    #drop_zone {
        max-width: 600px;
        border: 2px dashed #bbb;
        -moz-border-radius: 5px;
        -webkit-border-radius: 5px;
        border-radius: 5px;
        padding: 35px;
        text-align: center;
        font-size: 20px;
        color: #bbb;
    }
    .thumb {
        height: 75px;
        border: 1px solid #ccc;
        margin: 10px 5px 0 0;
    }
</style>
<h2>Create</h2>

<output id="list"></output>

@using (Html.BeginForm("Create", "PhotoGallery", FormMethod.Post, new { enctype = "multipart/form-data"})) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>PhotoGallery</h4>
        <hr />
        @Html.ValidationSummary(true)


        <div class="form-group">
            <div class="col-md-10">
                <label for="file" class="control-label col-md-2">Sækja myndir</label>
                <div class="col-md-10">
                    <input type="file" id="files" name="files" value="" multiple="multiple" class="btn btn-default" />
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-10">
                @Html.DropDownList("ProjectID", null, new { @class = "form-control" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    function handleFileSelect(evt) {
        var files = evt.target.files; // FileList object

        // Loop through the FileList and render image files as thumbnails.
        for (var i = 0, f; f = files[i]; i++) {

            // Only process image files.
            if (!f.type.match('image.*')) {
                continue;
            }

            var reader = new FileReader();

            // Closure to capture the file information.
            reader.onload = (function (theFile) {
                return function (e) {
                    // Render thumbnail.
                    var span = document.createElement('span');
                    span.innerHTML = ['<img class="thumb" src="', e.target.result,
                                      '" title="', escape(theFile.name), '"/><i>Size: ', theFile.size, '</i>'].join('');
                    document.getElementById('list').insertBefore(span, null);
                };
            })(f);

            // Read in the image file as a data URL.
            reader.readAsDataURL(f);
        }
    }

    document.getElementById('files').addEventListener('change', handleFileSelect, false);
</script>